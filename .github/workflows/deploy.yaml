name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: kwetter-cluster-1    # cluster name
  GKE_ZONE: europe-west1   # cluster zone
  IMAGE: kwetter # image name
  IMAGEOAuth: kwetteroauth # image name
  IMAGEReact: kwetterreact # image name
  IMAGE_TAG: kwetterlatest # image tag
  GAR_ZONE: europe-west4 # artifact registry zone
  GAR_REPO: kwetter-repo # artifact registry repository

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - name: Docker configuration
      run: |-
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: install the gcloud cli
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GKE_PROJECT }}
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        install_components: 'gke-gcloud-auth-plugin'
        export_default_credentials: true
        
    # Build the Docker image
    - name: Build
      run: |-
        docker-compose build
      shell: bash
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker-compose push
    # configure kubectl

    - name: Configure kubectl
      run: |-
          gcloud container clusters get-credentials ${GKE_CLUSTER} --zone ${GKE_ZONE} --project ${PROJECT_ID}

    - name: Create Docker Registry Secret
      run: |-
          gcloud auth print-access-token | kubectl create secret docker-registry gcr-json-key \
            --docker-server=europe-west4-docker.pkg.dev \
            --docker-username=_json_key \
            --docker-password="$(gcloud auth print-access-token)" \
            --docker-email=mervakhan0786@gmail.com || true  # Add '|| true' to ignore error if secret already exists

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
          kubectl patch deployment tweetmicro-service-development -p \
          "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
          kubectl patch deployment oauthmicro-service-development -p \
          "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
          kubectl patch deployment react-frontend-development -p \
          "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
          kubectl apply -f k8s/ --force
          kubectl get pods
